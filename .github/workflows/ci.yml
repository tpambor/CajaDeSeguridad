name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          pip install -r requirements.txt
      - name: Run tests
        run: |
          coverage run
          coverage xml
          coverage report

  infra-plan:
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.plan.outputs.plan }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Init
        working-directory: terraform
        run: |
          terraform init
      - name: Validate
        working-directory: terraform
        run: |
          terraform validate
      - name: Plan
        id: plan
        working-directory: terraform
        run: |
          terraform plan -out tf.plan
          echo "plan=$(cat tf.plan | base64 -w 0)" >> "$GITHUB_OUTPUT"          

  infra-apply:
    runs-on: ubuntu-latest
    needs: infra-plan
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Init
        working-directory: terraform
        run: |
          terraform init
      - name: Load plan
        run: |
          echo "::add-mask::${{needs.infra-plan.outputs.plan}}"
          echo ${{needs.infra-plan.outputs.plan}} | base64 --decode > tf.plan
          echo "::add-mask::${{needs.infra-plan.outputs.plan}}"

      - name: Apply
        working-directory: terraform
        run: |
          ls -la .
